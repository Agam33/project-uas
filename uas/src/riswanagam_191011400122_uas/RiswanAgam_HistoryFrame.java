/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package riswanagam_191011400122_uas;

import Model.RiswanAgam_Customer;
import Model.RiswanAgam_Database;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Riswan Agam
 * @NIM 191011400122
 * @Tugas UAS
 */
public class RiswanAgam_HistoryFrame extends javax.swing.JFrame {
  
    private RiswanAgam_Database database; // model class database
    private DefaultTableModel model;
    /**
     * Creates new form RiswanAgam_HistoryFrame
     */
    public RiswanAgam_HistoryFrame() {
        initComponents();
        Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
        int width = (int)size.getWidth();
        int height = (int)size.getHeight();
        setBounds(width/2-200,height/2-250,670,540);
        database = new RiswanAgam_Database();
        database.connection();
        initTable();
        setResizable(false);
        setTitle("History");
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        table_history = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        kembali_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Id Customer", "Jumlah Uang", "Waktu", "keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_history.setViewportView(table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("History");

        kembali_btn.setText("Kembali");
        kembali_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembali_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jLabel1)
                .addContainerGap(414, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kembali_btn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(table_history, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(table_history, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kembali_btn)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initTable() {
        model = new DefaultTableModel();
        model.addColumn("NO");
        model.addColumn("Nama customer");
        model.addColumn("Jumlah Uang");
        model.addColumn("Waktu");
        model.addColumn("Keterangan");
        table.setModel(model);
        try {
            HashMap<Integer,String> csList = customers();
            database.setResult(database.getStat().executeQuery("select * from history")); 
            while(database.getResult().next()) {
                model.addRow(new Object[] {
                    database.getResult().getString("no_history"),
                    csList.get(database.getResult().getInt("id_customer")), /*
                        Ambil nama customer dalam hashmap melalui id_customer.
                    */
                    database.getResult().getLong("jumlah_uang"),
                    database.getResult().getString("waktu_history"),
                    database.getResult().getString("keterangan_history"),         
                });
            }
        } catch(Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane,e);
        }
    }
    /*  
        customers() :
   
        Masukan seluruh data customer ke dalam hashmap.
        karena pada table history hanya terdapat id customer,
        jadi digunakan untuk mengambil nama customer sebagai value di Hashmap
        --
        Hashmap<id_customer,nama_customer> 
    */
     public HashMap<Integer,String> customers() {
        ResultSet res = database.getResult();
        HashMap<Integer,String> customers = new HashMap<>();
        try {
              res = database.getStat().executeQuery("select * from customers");
              while(res.next()) {
                  customers.put(res.getInt("id_customer"),res.getString("nama_customer"));
              }
        } catch(SQLException e) {
            e.printStackTrace();
        }
        return customers;
    }
    private void kembali_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembali_btnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_kembali_btnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton kembali_btn;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane table_history;
    // End of variables declaration//GEN-END:variables
}
